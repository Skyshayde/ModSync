buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'com.google.code.gson:gson-parent:2.8.1'

    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.1'
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the nessasary things for Forge to be setup.


version = "0.1"
group = "io.github.skyshayde" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "modsync"

sourceCompatibility = targetCompatibility = "1.6" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = "1.6"
}
task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

minecraft {
    version = "1.10.2-12.18.3.2185"
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not allways work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20161111"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
//    compile files("jetty-all-uber.jar")
    compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.6.v20170531'
    compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.6.v20170531'

}
//shadowJar {
//    from zipTree(jar.archivePath)
//}
processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
